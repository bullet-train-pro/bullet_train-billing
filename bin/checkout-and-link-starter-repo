#!/usr/bin/env bash

# I can't remember if there was another fix for this.
rm LICENSE.chromedriver

# Look for a matching branch on the starter repository when running tests on CircleCI.
CI_BRANCH=$CIRCLE_BRANCH
if [[ -v CI_BRANCH ]]
then
  # Default to the main branch if we don't find a matching branch on the starter repository.
  STARTER_REPO_BRANCH="main"
  BRANCH_NAMES_JSON=$(curl -H "Accept: application.vnd.github+json" https://api.github.com/repos/bullet-train-co/bullet_train/branches)
  echo "This is what we're getting from the GitHub API:\n\n${BRANCH_NAMES_JSON}"
  BRANCH_NAMES=$(echo $BRANCH_NAMES_JSON | jq -r '.[].name')
  echo "These are the branches on the starter repo:\n\n${BRANCH_NAMES}"

  for BRANCH in $BRANCH_NAMES; do
    if [ ${BRANCH} == $CIRCLE_BRANCH ]
    then
      STARTER_REPO_BRANCH=$BRANCH
      break
    fi
  done

  echo "Cloning from ${STARTER_REPO_BRANCH}..."
  git clone -b $STARTER_REPO_BRANCH https://github.com/bullet-train-co/bullet_train.git .
else
  git clone https://github.com/bullet-train-co/bullet_train.git .
fi

package=$(find ../../*.gemspec | sed 's/\.gemspec//' | sed 's/..\///g')

echo $(ls)

echo "Removing '$package' from the Gemfile."
grep -v "gem \"$package\"" Gemfile > Gemfile.tmp
echo "Replacing the Gemfile."
mv Gemfile.tmp Gemfile
echo "Adding the package again, but linking two directories up."
echo "gem \"$package\", path: \"../..\"" >> Gemfile

bundle install

cp ../../db/migrate/* db/migrate
git status

bundle exec rake db:migrate